name: Tests
on:
  push:
    branches:
      - master
  

jobs:
  # ubuntu-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Setup Python 3.12
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.12
  #     - name: Install Poetry
  #       uses: snok/install-poetry@v1
  #       with:
  #         version: 1.8.3
  #         virtualenvs-create: true
  #         virtualenvs-in-project: true
  #     - name: Apt update
  #       run: | 
  #         sudo apt-get update -qq -y
  #         export DEBIAN_FRONTEND=noninteractive
  #     - name: Setup OpenGl
  #       run: | 
  #         sudo apt-get -y install \
  #           freeglut3-dev \
  #           libgl1-mesa-dev \
  #           libxcursor-dev \
  #           libpulse-dev \
  #           libxinerama-dev \
  #           libxrandr-dev \
  #           libxv-dev \
  #           mesa-utils \
  #           libgl1-mesa-glx \
  #           mesa-common-dev \
  #           libglapi-mesa \
  #           libgbm1 \
  #           libgl1-mesa-dri \
  #           libsdl1.2-dev \
  #           libfreetype6-dev \
  #           xvfb \
  #           x11-utils
  #     - name: Verify GLUT installation
  #       run: |
  #         dpkg -l | grep freeglut3-dev

  #     - name: Setup cache for dependencies
  #       id: cached-poetry-dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: .venv
  #         key: venv-${{  runner.os }}-${{ hashFiles('**/poetry.lock') }}
  #     - name: Install dependencies
  #       if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
  #       run: poetry install
  #     - name: Release
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         GIT_HASH: ${{ github.sha }}
  #       run: |

  #         export LIBGL_ALWAYS_SOFTWARE=1
  #         export MODEL_RESOLVER_TEST_BUILD=1

          COMMAND="poetry run beet"
          /usr/bin/xvfb-run -s "-screen 0 2560x1440x24 +extension GLX +extension RENDER" $COMMAND
  #     - name: Upload dist folder
  #       run: tar -czvf dist-ubuntu.tar.gz dist/
  #     - name: Upload compressed dist folder
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dist-ubuntu
  #         path: dist-ubuntu.tar.gz

  # windows-tests:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Setup Python 3.12
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.12
  #     - name: Install Poetry
  #       uses: snok/install-poetry@v1
  #       with:
  #         version: 1.8.3
  #         virtualenvs-create: true
  #         virtualenvs-in-project: true
  #     - name: Install dependencies
  #       run: |
  #         C:\Users\runneradmin\.local\bin\poetry install
  #     - uses: ssciwr/setup-mesa-dist-win@v2
  #     - name: Run tests
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         GIT_HASH: ${{ github.sha }}
  #       run: |
  #         set MODEL_RESOLVER_TEST_BUILD=1
  #         set LIBGL_ALWAYS_SOFTWARE=1

  #         C:\Users\runneradmin\.local\bin\poetry run beet

  #     - name: Upload dist folder
  #       run: Compress-Archive -Path dist\* -DestinationPath dist-windows.zip
  #     - name: Upload compressed dist folder
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: dist-windows
  #         path: dist-windows.zip


  macos-tests:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12
      - name: Setup OpenGl
        run: |
          brew install --cask xquartz
          ls -la /opt/X11/bin/
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        run: poetry install
      - name: Run tests
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_HASH: ${{ github.sha }}
        run: |
          export MODEL_RESOLVER_TEST_BUILD=1
          export LIBGL_ALWAYS_SOFTWARE=1
          export DISPLAY=:99

          # Set the display number
          DISPLAY=:99

          # Start Xvfb on the chosen display number
          /usr/bin/Xvfb $DISPLAY -screen 0 2560x1440x24 +extension GLX +extension RENDER &

          # Save the process ID of Xvfb
          XVFB_PID=$!

          # Export the DISPLAY environment variable
          export DISPLAY=$DISPLAY

          # Run the command
          poetry run beet

          # Kill the Xvfb process after the command completes
          kill $XVFB_PID
      - name: Upload dist folder
        run: tar -czvf dist-macos.tar.gz dist/
      - name: Upload compressed dist folder
        uses: actions/upload-artifact@v3
        with:
          name: dist-macos
          path: dist-macos.tar.gz

